{"version":3,"sources":["GoodsList.jsx","App.js","index.js"],"names":["GoodsList","goods","reversed","sortedBy","minLength","processedList","filter","item","length","sort","a","b","localeCompare","reverse","map","key","goodsFromServer","filterOptions","App","state","isContentVisible","isReversed","lengthFilter","enableContent","event","target","hidden","setState","sortAlphabetically","sortByLength","handleFilter","value","reset","this","className","type","onClick","disabled","name","onChange","number","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,EAAY,SAAC,GAEnB,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,SAAUC,EACb,EADaA,SAAUC,EACvB,EADuBA,UAErBC,EAAgB,YAAIJ,GAAOK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,SAAWJ,KAEhE,OAAQD,GACN,IAAK,OACHE,EAAcI,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC9C,MAEF,IAAK,SACHN,EAAcI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,OAASG,EAAEH,UAU9C,OAJIN,GACFG,EAAcQ,UAId,4BACGR,EAAcS,KAAI,SAAAP,GAAI,OACrB,wBAAIQ,IAAKR,GACNA,QCxBLS,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAErCC,EAAb,4MACEC,MAAQ,CACNC,kBAAkB,EAClBC,YAAY,EACZlB,SAAU,GACVmB,aAAc,KALlB,EAQEC,cAAgB,SAACC,GACAA,EAAMC,OAEdC,QAAS,EAChB,EAAKC,SAAS,CAAEP,kBAAkB,KAZtC,EAeEQ,mBAAqB,WACnB,EAAKD,SAAS,CACZN,YAAY,EACZlB,SAAU,UAlBhB,EAsBE0B,aAAe,WACb,EAAKF,SAAS,CACZN,YAAY,EACZlB,SAAU,YAzBhB,EA6BE2B,aAAe,SAACN,GAAW,IACjBO,EAAUP,EAAMC,OAAhBM,MAER,EAAKJ,SAAS,CACZL,aAAcS,KAjCpB,EAqCEC,MAAQ,WACN,EAAKL,SAAS,CACZN,YAAY,EACZlB,SAAU,MAxChB,uDA4CY,IAAD,SAGH8B,KAAKd,MADPC,EAFK,EAELA,iBAAkBC,EAFb,EAEaA,WAAYlB,EAFzB,EAEyBA,SAAUmB,EAFnC,EAEmCA,aAG1C,OACE,yBAAKY,UAAU,OACb,qCAEA,4BACEC,KAAK,SACLC,QAASH,KAAKV,eAFhB,SAOA,4BACEY,KAAK,SACLE,UAAWjB,EACXgB,QAAS,WACP,EAAKT,UAAS,SAAAR,GAAK,MAAK,CAAEE,YAAaF,EAAME,iBAJjD,WAUA,4BACEc,KAAK,SACLE,UAAWjB,EACXgB,QAASH,KAAKL,oBAHhB,gBAQA,4BACEO,KAAK,SACLE,UAAWjB,EACXgB,QAASH,KAAKJ,cAHhB,kBAQA,4BACEM,KAAK,SACLE,UAAWjB,EACXgB,QAASH,KAAKD,OAHhB,SAQA,4BACEK,UAAWjB,EACXkB,KAAK,eACLP,MAAOT,EACPiB,SAAUN,KAAKH,cAEdb,EAAcH,KAAI,SAAA0B,GAAM,OACvB,4BAAQT,MAAK,UAAKS,GAAUzB,IAAKyB,GAC9BA,OAKNpB,GAEG,kBAAC,EAAD,CACEnB,MAAOe,EACPd,SAAUmB,EACVlB,SAAUA,EACVC,UAAWkB,SAjHzB,GAAyBmB,IAAMC,WCf/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5a1eb721.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({\n  goods, reversed, sortedBy, minLength,\n}) => {\n  const processedList = [...goods].filter(item => item.length >= +minLength);\n\n  switch (sortedBy) {\n    case 'name':\n      processedList.sort((a, b) => (a.localeCompare(b)));\n      break;\n\n    case 'length':\n      processedList.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n  }\n\n  if (reversed) {\n    processedList.reverse();\n  }\n\n  return (\n    <ul>\n      {processedList.map(item => (\n        <li key={item}>\n          {item}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  reversed: PropTypes.bool.isRequired,\n  sortedBy: PropTypes.string.isRequired,\n  minLength: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst filterOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport class App extends React.Component {\n  state = {\n    isContentVisible: false,\n    isReversed: false,\n    sortedBy: '',\n    lengthFilter: '1',\n  };\n\n  enableContent = (event) => {\n    const button = event.target;\n\n    button.hidden = true;\n    this.setState({ isContentVisible: true });\n  }\n\n  sortAlphabetically = () => {\n    this.setState({\n      isReversed: false,\n      sortedBy: 'name',\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      isReversed: false,\n      sortedBy: 'length',\n    });\n  }\n\n  handleFilter = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      lengthFilter: value,\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortedBy: '',\n    });\n  }\n\n  render() {\n    const {\n      isContentVisible, isReversed, sortedBy, lengthFilter,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n\n        <button\n          type=\"button\"\n          onClick={this.enableContent}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={() => {\n            this.setState(state => ({ isReversed: !state.isReversed }));\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={this.sortAlphabetically}\n        >\n          Sort by name\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n\n        <select\n          disabled={!isContentVisible}\n          name=\"lengthFilter\"\n          value={lengthFilter}\n          onChange={this.handleFilter}\n        >\n          {filterOptions.map(number => (\n            <option value={`${number}`} key={number}>\n              {number}\n            </option>\n          ))}\n        </select>\n\n        {isContentVisible\n          && (\n            <GoodsList\n              goods={goodsFromServer}\n              reversed={isReversed}\n              sortedBy={sortedBy}\n              minLength={lengthFilter}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}