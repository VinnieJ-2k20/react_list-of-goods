{"version":3,"sources":["GoodsList.jsx","App.js","index.js"],"names":["GoodsList","processedList","goods","reversed","sortedBy","sort","a","b","localeCompare","length","reverse","map","item","key","goodsFromServer","App","state","isContentVisible","isReversed","enableContent","event","target","hidden","setState","sortAlphabetically","sortByLength","reset","this","className","type","onClick","disabled","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,EAAY,SAAC,GAInB,IACDC,EAJJC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SAKA,OAHI,EADJC,UAKE,IAAK,OACHH,EAAgB,YAAIC,GAAOG,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MAC3D,MAEF,IAAK,SACHN,EAAgB,YAAIC,GAAOG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACvD,MAEF,QACER,EAAa,YAAOC,GAOxB,OAJIC,GACFF,EAAcS,UAId,4BACGT,EAAcU,KAAI,SAAAC,GAAI,OACrB,wBAAIC,IAAKD,GACNA,QC3BLE,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,kBAAkB,EAClBC,YAAY,EACZd,SAAU,IAJd,EAOEe,cAAgB,SAACC,GACAA,EAAMC,OAEdC,QAAS,EAChB,EAAKC,SAAS,CAAEN,kBAAkB,KAXtC,EAcEO,mBAAqB,WACnB,EAAKD,SAAS,CACZL,YAAY,EACZd,SAAU,UAjBhB,EAqBEqB,aAAe,WACb,EAAKF,SAAS,CACZL,YAAY,EACZd,SAAU,YAxBhB,EA4BEsB,MAAQ,WACN,EAAKH,SAAS,CACZL,YAAY,EACZd,SAAU,MA/BhB,uDAmCY,IAAD,SAKHuB,KAAKX,MAHPC,EAFK,EAELA,iBACAC,EAHK,EAGLA,WACAd,EAJK,EAILA,SAGF,OACE,yBAAKwB,UAAU,OACb,qCAEA,4BACEC,KAAK,SACLC,QAASH,KAAKR,eAFhB,SAOA,4BACEU,KAAK,SACLE,UAAWd,EACXa,QAAS,WACP,EAAKP,UAAS,SAAAP,GAAK,MAAK,CAAEE,YAAaF,EAAME,iBAJjD,WAUA,4BACEW,KAAK,SACLE,UAAWd,EACXa,QAASH,KAAKH,oBAHhB,gBAQA,4BACEK,KAAK,SACLE,UAAWd,EACXa,QAASH,KAAKF,cAHhB,kBAQA,4BACEI,KAAK,SACLE,UAAWd,EACXa,QAASH,KAAKD,OAHhB,SAQCT,GAEG,kBAAC,EAAD,CACEf,MAAOY,EACPX,SAAUe,EACVd,SAAUA,SA5FxB,GAAyB4B,IAAMC,WCb/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c7598db3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({\n  goods,\n  reversed,\n  sortedBy,\n}) => {\n  let processedList;\n\n  switch (sortedBy) {\n    case 'name':\n      processedList = [...goods].sort((a, b) => (a.localeCompare(b)));\n      break;\n\n    case 'length':\n      processedList = [...goods].sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      processedList = [...goods];\n  }\n\n  if (reversed) {\n    processedList.reverse();\n  }\n\n  return (\n    <ul>\n      {processedList.map(item => (\n        <li key={item}>\n          {item}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  reversed: PropTypes.bool.isRequired,\n  sortedBy: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    isContentVisible: false,\n    isReversed: false,\n    sortedBy: '',\n  };\n\n  enableContent = (event) => {\n    const button = event.target;\n\n    button.hidden = true;\n    this.setState({ isContentVisible: true });\n  }\n\n  sortAlphabetically = () => {\n    this.setState({\n      isReversed: false,\n      sortedBy: 'name',\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      isReversed: false,\n      sortedBy: 'length',\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortedBy: '',\n    });\n  }\n\n  render() {\n    const {\n      isContentVisible,\n      isReversed,\n      sortedBy,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n\n        <button\n          type=\"button\"\n          onClick={this.enableContent}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={() => {\n            this.setState(state => ({ isReversed: !state.isReversed }));\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={this.sortAlphabetically}\n        >\n          Sort by name\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={!isContentVisible}\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n\n        {isContentVisible\n          && (\n            <GoodsList\n              goods={goodsFromServer}\n              reversed={isReversed}\n              sortedBy={sortedBy}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}